"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var Event = /** @class */ (function () {
    function Event() {
        this.timestamp = new Date();
    }
    return Event;
}());
exports.Event = Event;
(function (Event) {
    var ConnectionChange = /** @class */ (function (_super) {
        __extends(ConnectionChange, _super);
        function ConnectionChange(connection) {
            var _this = _super.call(this) || this;
            _this.connection = connection;
            return _this;
        }
        return ConnectionChange;
    }(Event));
    Event.ConnectionChange = ConnectionChange;
    var Connecting = /** @class */ (function (_super) {
        __extends(Connecting, _super);
        function Connecting() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Connecting;
    }(ConnectionChange));
    Event.Connecting = Connecting;
    var Connected = /** @class */ (function (_super) {
        __extends(Connected, _super);
        function Connected() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Connected;
    }(ConnectionChange));
    Event.Connected = Connected;
    var Disconnecting = /** @class */ (function (_super) {
        __extends(Disconnecting, _super);
        function Disconnecting() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Disconnecting;
    }(ConnectionChange));
    Event.Disconnecting = Disconnecting;
    var Disconnected = /** @class */ (function (_super) {
        __extends(Disconnected, _super);
        function Disconnected() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Disconnected;
    }(ConnectionChange));
    Event.Disconnected = Disconnected;
    var Data = /** @class */ (function (_super) {
        __extends(Data, _super);
        function Data(data) {
            var _this = _super.call(this) || this;
            _this.data = data;
            return _this;
        }
        return Data;
    }(Event));
    Event.Data = Data;
    var Command = /** @class */ (function (_super) {
        __extends(Command, _super);
        function Command(command) {
            var _this = _super.call(this) || this;
            _this.command = command;
            return _this;
        }
        return Command;
    }(Event));
    Event.Command = Command;
    var Server = /** @class */ (function (_super) {
        __extends(Server, _super);
        function Server() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Server;
    }(Event));
    Event.Server = Server;
    var Starting = /** @class */ (function (_super) {
        __extends(Starting, _super);
        function Starting() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Starting;
    }(Server));
    Event.Starting = Starting;
    var Started = /** @class */ (function (_super) {
        __extends(Started, _super);
        function Started() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Started;
    }(Server));
    Event.Started = Started;
    var Ending = /** @class */ (function (_super) {
        __extends(Ending, _super);
        function Ending() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Ending;
    }(Server));
    Event.Ending = Ending;
    var Ended = /** @class */ (function (_super) {
        __extends(Ended, _super);
        function Ended() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Ended;
    }(Server));
    Event.Ended = Ended;
})(Event = exports.Event || (exports.Event = {}));
exports.Event = Event;
//# sourceMappingURL=event.js.map